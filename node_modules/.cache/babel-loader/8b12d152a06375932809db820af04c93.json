{"ast":null,"code":"import _objectSpread from \"/home/bahachammakhi/Projects/ecommerce-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TO_CART, REMOVE_FROM_CART } from \"./type\";\nexport const addToCart = (items, item) => dispatch => {\n  const cartItems = items.splice();\n  let productAlreadyInCart = false;\n  cartItems.forEach(item => {\n    if (item.id === product.id) {\n      productAlreadyInCart = true;\n      item.count++;\n    }\n  });\n\n  if (!productAlreadyInCart) {\n    cartItems.push(_objectSpread({}, product, {\n      count: 1\n    }));\n  }\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  return dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      cartItems: cartItems\n    }\n  });\n};\nexport const removeFromCart = (items, product) => dispatch => {\n  const cartItems = items.splice().filter(elem => elem.id != item.id);\n  localStorage.removeItem(\"cartItem\", cartItems);\n  return dispatch({\n    type: REMOVE_FROM_CART,\n    payload: {\n      cartItems\n    }\n  });\n};","map":{"version":3,"sources":["/home/bahachammakhi/Projects/ecommerce-shop/src/actions/cartActions.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","addToCart","items","item","dispatch","cartItems","splice","productAlreadyInCart","forEach","id","product","count","push","localStorage","setItem","JSON","stringify","type","payload","removeFromCart","filter","elem","removeItem"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,QAA9C;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiBC,QAAQ,IAAI;AACpD,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAlB;AACA,MAAIC,oBAAoB,GAAG,KAA3B;AACAF,EAAAA,SAAS,CAACG,OAAV,CAAkBL,IAAI,IAAI;AACxB,QAAIA,IAAI,CAACM,EAAL,KAAYC,OAAO,CAACD,EAAxB,EAA4B;AAC1BF,MAAAA,oBAAoB,GAAG,IAAvB;AACAJ,MAAAA,IAAI,CAACQ,KAAL;AACD;AACF,GALD;;AAMA,MAAI,CAACJ,oBAAL,EAA2B;AACzBF,IAAAA,SAAS,CAACO,IAAV,mBAAoBF,OAApB;AAA6BC,MAAAA,KAAK,EAAE;AAApC;AACD;;AACDE,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAAlC;AACA,SAAOD,QAAQ,CAAC;AACda,IAAAA,IAAI,EAAElB,WADQ;AAEdmB,IAAAA,OAAO,EAAE;AACPb,MAAAA,SAAS,EAAEA;AADJ;AAFK,GAAD,CAAf;AAMD,CAnBM;AAoBP,OAAO,MAAMc,cAAc,GAAG,CAACjB,KAAD,EAAQQ,OAAR,KAAoBN,QAAQ,IAAI;AAC5D,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,GAAec,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACZ,EAAL,IAAWN,IAAI,CAACM,EAA9C,CAAlB;AACAI,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EAAoCjB,SAApC;AACA,SAAOD,QAAQ,CAAC;AACda,IAAAA,IAAI,EAAEjB,gBADQ;AAEdkB,IAAAA,OAAO,EAAE;AACPb,MAAAA;AADO;AAFK,GAAD,CAAf;AAMD,CATM","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"./type\";\n\nexport const addToCart = (items, item) => dispatch => {\n  const cartItems = items.splice();\n  let productAlreadyInCart = false;\n  cartItems.forEach(item => {\n    if (item.id === product.id) {\n      productAlreadyInCart = true;\n      item.count++;\n    }\n  });\n  if (!productAlreadyInCart) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  return dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      cartItems: cartItems\n    }\n  });\n};\nexport const removeFromCart = (items, product) => dispatch => {\n  const cartItems = items.splice().filter(elem => elem.id != item.id);\n  localStorage.removeItem(\"cartItem\", cartItems);\n  return dispatch({\n    type: REMOVE_FROM_CART,\n    payload: {\n      cartItems\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}